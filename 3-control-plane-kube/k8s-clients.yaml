---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-1
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: client-1
      purpose: client
  template:
    metadata:
      labels: 
        app: client-1
        purpose: client
    spec:
      containers:
      - name: go-test-app
        image: carsonoid/go-test-app
        args:
        - /client
        - grpc
        - xds:///alpha
        env:
        - name: GRPC_XDS_BOOTSTRAP_CONFIG
          value: '{"xds_servers":[{"server_uri":"control-plane:18000","channel_creds":[{"type":"insecure"}],"server_features":["xds_v3"]}],"node":{"id": "test-id"}}'
        # - name: GRPC_GO_LOG_SEVERITY_LEVEL
        #   value: info
        # - name: GRPC_GO_LOG_VERBOSITY_LEVEL
        #   value: "99"
        # - name: GRPC_VERBOSITY
        #   value: info
        imagePullPolicy: Never # OMIT
        resources: {} # OMIT
        terminationMessagePath: /dev/termination-log # OMIT
        terminationMessagePolicy: File # OMIT
      # END FOCUS OMIT
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client-2
      purpose: client
  template:
    metadata:
      labels:
        app: client-2
        purpose: client
    spec:
      containers:
      - name: go-test-app
        image: carsonoid/go-test-app
        args:
        - /client
        - grpc
        - xds:///alpha
        env:
        - name: GRPC_XDS_BOOTSTRAP_CONFIG
          value: '{"xds_servers":[{"server_uri":"control-plane.default.svc.cluster.local:18000","channel_creds":[{"type":"insecure"}],"server_features":["xds_v3"]}],"node":{"id": "test-id"}}'
        imagePullPolicy: Never # OMIT
        resources: {} # OMIT
        terminationMessagePath: /dev/termination-log # OMIT
        terminationMessagePolicy: File # OMIT
      # END FOCUS OMIT
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
