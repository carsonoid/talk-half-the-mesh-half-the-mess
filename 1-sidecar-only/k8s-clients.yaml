---
# START CONFIGMAP_INTRO OMIT
apiVersion: v1
kind: ConfigMap
metadata:
  name: client-envoy
data:
  envoy.yaml: |
    node:
      cluster: test-cluster
      id: test-id
    dynamic_resources:
      cds_config:
        resource_api_version: V3
        path_config_source:
          path: /etc/envoy/cds.yaml
          watched_directory:
            path: /etc/envoy
      lds_config:
        resource_api_version: V3
        path_config_source:
          path: /etc/envoy/lds.yaml
          watched_directory:
            path: /etc/envoy
# END CONFIGMAP_INTRO OMIT
# START CONFIGMAP_LDS OMIT
  lds.yaml: |
    resources:
    - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
      name: listener_0
      address:
        socket_address:
          address: "127.0.0.1"
          port_value: 8080
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_http
            http_filters:
            - name: envoy.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            # START CONFIGMAP_LDS_ROUTES OMIT
            route_config: # <- route config goes here
              # END CONFIGMAP_LDS OMIT
              name: default_route
              virtual_hosts:
              - name: default_host
                domains: [ "service.local:8080" ]
                routes:
                # - match: # route "Source-App: client-1" goes to beta
                #     prefix: "/"
                #     headers: [{name: "Source-App", string_match: {exact: "client-1"}}]
                #   route: { cluster: service_beta_cluster }
                - match: # default route goes to main
                    prefix: "/"
                  route:
                    cluster: service_main_cluster
                  # weighted_clusters:
                  #   clusters:
                  #   - name: service_main_cluster
                  #     weight: 50
                  #   - name: service_beta_cluster
                  #     weight: 50
                # END CONFIGMAP_LDS_ROUTES OMIT
# START CONFIGMAP_CDS OMIT
  cds.yaml: |
    resources:
    - "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
      name: service_main_cluster
      type: STRICT_DNS
      load_assignment:
        cluster_name: service_main_cluster
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address: { address: service-main.default.svc.cluster.local, port_value: 8080 }
    - "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
      name: service_beta_cluster
      type: STRICT_DNS
      load_assignment:
        cluster_name: service_beta_cluster
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address: { address: service-beta.default.svc.cluster.local, port_value: 8080 }
# END CONFIGMAP_CDS OMIT
---
# START DEPLOYMENT1 OMIT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client-1
      purpose: client
  # START DEPLOYMENT1_HOSTS OMIT
  template:
    metadata:
      labels:
        app: client-1
        purpose: client
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "service.local"
  # END DEPLOYMENT1_HOSTS OMIT
  # START CONTAINERS OMIT
      # ...
  # END DEPLOYMENT1 OMIT
      containers:
      - name: envoy
        image: envoyproxy/envoy:dev-b65de1f56850326e1c6b74aa72cb1c9777441065
        resources: {} # OMIT
        volumeMounts:
        - name: config-volume
          mountPath: /etc/envoy # /etc/envoy/envoy.yaml is the default path for envoy config

      - name: go-test-app
        image: carsonoid/go-test-app
        args:
        - /client
        - http
        - 'Source-App: client-1'
        imagePullPolicy: Never # OMIT
        resources: {} # OMIT
        terminationMessagePath: /dev/termination-log # OMIT
        terminationMessagePolicy: File # OMIT
      dnsPolicy: ClusterFirst # OMIT
      restartPolicy: Always # OMIT
      schedulerName: default-scheduler # OMIT
      securityContext: {} # OMIT
      terminationGracePeriodSeconds: 30 # OMIT

      volumes:
      - name: config-volume
        configMap:
          name: client-envoy
  # END CONTAINERS OMIT
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client-2
      purpose: client
  template:
    metadata:
      labels:
        app: client-2
        purpose: client
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "service.local"
      containers:
      - name: envoy
        image: envoyproxy/envoy:dev-b65de1f56850326e1c6b74aa72cb1c9777441065
        resources: {} # OMIT
        volumeMounts:
        - name: config-volume
          mountPath: /etc/envoy
      - name: go-test-app
        image: carsonoid/go-test-app
        args:
        - /client
        - http
        - 'Source-App: client-2'
        imagePullPolicy: Never # OMIT
        resources: {} # OMIT
        terminationMessagePath: /dev/termination-log # OMIT
        terminationMessagePolicy: File # OMIT
      # END FOCUS OMIT
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config-volume
        configMap:
          name: client-envoy
